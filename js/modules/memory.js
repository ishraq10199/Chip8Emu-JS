const { chip8 } = window;

chip8.memory = new Uint8Array(4096);

chip8.memoryUtils = (() => {
  const fontMap = new Array(16);

  // @todo Program Counter, Index register operations here
  const ns = Object.create(null);
  ns.populateFonts = () => {
    // Bitmaps of chars in range 0 ~ F, where each char is represented using 5 bytes
    const bitmaps = [
      [0xf0, 0x90, 0x90, 0x90, 0xf0], // 0
      [0x20, 0x60, 0x20, 0x20, 0x70], // 1
      [0xf0, 0x10, 0xf0, 0x80, 0xf0], // 2
      [0xf0, 0x10, 0xf0, 0x10, 0xf0], // 3
      [0x90, 0x90, 0xf0, 0x10, 0x10], // 4
      [0xf0, 0x80, 0xf0, 0x10, 0xf0], // 5
      [0xf0, 0x80, 0xf0, 0x90, 0xf0], // 6
      [0xf0, 0x10, 0x20, 0x40, 0x40], // 7
      [0xf0, 0x90, 0xf0, 0x90, 0xf0], // 8
      [0xf0, 0x90, 0xf0, 0x10, 0xf0], // 9
      [0xf0, 0x90, 0xf0, 0x90, 0x90], // A
      [0xe0, 0x90, 0xe0, 0x90, 0xe0], // B
      [0xf0, 0x80, 0x80, 0x80, 0xf0], // C
      [0xe0, 0x90, 0x90, 0x90, 0xe0], // D
      [0xf0, 0x80, 0xf0, 0x80, 0xf0], // E
      [0xf0, 0x80, 0xf0, 0x80, 0x80], // F
    ];
    // By popular convention, we are using the memory from 0x050 (80) to 0x09F (160)
    const fontStart = 0x050;

    for (
      let i = fontStart, currentCharRow = 0, currentCharCol = 0;
      i < (fontStart + 80);
      i++
    ) {
      if (currentCharCol === 0) {
        fontMap[currentCharRow] = i;
      }
      chip8.memory[i] = bitmaps[currentCharRow][currentCharCol];

      if (currentCharCol === 4) {
        currentCharCol = 0;
        currentCharRow++;
      }
      else {
        currentCharCol++;
      }
    }
  };
  ns.fontMap = fontMap;
  return ns;
})();
